package com.fourdworks.handweather.fragment;import java.util.ArrayList;import java.util.List;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.view.View;import android.view.View.OnClickListener;import android.widget.ImageButton;import android.widget.ListView;import com.fourdworks.handweather.R;import com.fourdworks.handweather.activity.AddActivity;import com.fourdworks.handweather.activity.MainActivity;import com.fourdworks.handweather.adapter.UserCityAdapter;import com.fourdworks.handweather.beans.UserCity;//用户城市适配器的业务//----------------------------//  1.查询用户表中的用户城市的集合//  2.更新适配器//在添加城市页面，如果有新城市//----------------------------//	1.查询用户表中的用户城市的集合//	2.更新适配器import com.fourdworks.handweather.db.HandWeatherDAO;import com.fourdworks.handweather.global.CostantValue;/** * 功能:左侧面碎片（用户城市） * 作者:mike * 时间：2015-10-21 上午10:40:14 * 修改: */public class LeftFragement extends BaseFragement implements OnClickListener {	//城市列表相关	private ListView listUserCities;	private List<UserCity> userCities;	private UserCityAdapter userCityAdapter;		//编辑和添加按钮	private ImageButton edit,addUserCity;		public LeftFragement() {		super(R.layout.frag_left);		// TODO Auto-generated constructor stub	}		@Override	protected void initView() {		// TODO Auto-generated method stub		//初始化城市列表相关		listUserCities = (ListView) mView.findViewById(R.id.user_city);				edit = (ImageButton) mView.findViewById(R.id.left_edit);		addUserCity = (ImageButton) mView.findViewById(R.id.left_add);			}		@Override	protected void initData() {		// TODO Auto-generated method stub		//初始化城市列表相关		userCities = new ArrayList<UserCity>();		userCityAdapter = new UserCityAdapter(c, userCities);			}		/* (non-Javadoc)	 * @see com.fourdworks.handweather.fragment.BaseFragement#bindView()	 */	@Override	protected void bindView() {		// TODO Auto-generated method stub		//初始化城市列表相关			listUserCities.setAdapter(userCityAdapter);				//更新用户城市列表的显示(一进入这个这页面执行一次)		refreshUserCityList();				//为添加按钮注册单击事件		addUserCity.setOnClickListener(this);		edit.setOnClickListener(this);				//注册用用户城市改变的广播接收器		getAttachAct().registerReceiver(new BroadcastReceiver() {						@Override			public void onReceive(Context context, Intent intent) {				refreshUserCityList();			}		}, new IntentFilter(CostantValue.USERCITYCHANGED_ACTION));					}		/**	 * 更新用户城市集合的显示	 */	public void refreshUserCityList(){	//  1.查询用户表中的用户城市的集合//		----//		1.1获取用户集合		List<UserCity> temp = HandWeatherDAO.getInstance().getAllUserCities();						//如果没有用户城市，就自动跳转到添加城市页面		if(temp.size()<1){			getAttachAct().jumpToActivity(AddActivity.class);		}				//		1.2情况适配器中集合的数据		userCities.clear();//		1.3.将查询出来的集合，添加到适配器中集合（temp---->userCities）		userCities.addAll(temp);			//  2.更新适配器		userCityAdapter.notifyDataSetChanged();	}	@Override	public void onClick(View v) {		switch(v.getId()){		case R.id.left_add://添加			//跳转到添加城市页面			getAttachAct().jumpToActivity(AddActivity.class);						//如果左侧页面是在编辑状态			if(userCityAdapter.isInEditState()){				setOutSideEdit();								userCityAdapter.notifyDataSetChanged();			}			break;		case R.id.left_edit://编辑			//是否在编辑状态			if(userCityAdapter.isInEditState()){//是				setOutSideEdit();			}else{//否				//修改图标				edit.setImageResource(R.drawable.check);				//改为未编辑状态				userCityAdapter.setInEditState(true);			}						//刷新适配器			userCityAdapter.notifyDataSetChanged();						break;		}	}			/**	 * 将用户城市的状态设置为未编辑状态	 */	public void setOutSideEdit(){		//修改图标		edit.setImageResource(R.drawable.edit);		//改为未编辑状态		userCityAdapter.setInEditState(false);	}		/* 	 * 每次进入此页面都会执行一次	 */	@Override	public void onResume() {		super.onResume();		//7.显示中间页面						((MainActivity)c).mSlidingMenu.showLeftView();	}	}