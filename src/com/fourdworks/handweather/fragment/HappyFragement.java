package com.fourdworks.handweather.fragment;import java.util.ArrayList;import java.util.List;import org.json.JSONException;import org.json.JSONObject;import android.text.TextUtils;import com.fourdworks.handweather.R;import com.fourdworks.handweather.beans.New;import com.fourdworks.handweather.global.CostantValue;import com.fourdworks.handweather.http.HttpFactory;import com.fourdworks.handweather.utils.MathUtils;import com.fourdworks.handweather.view.SlideShowView;/** * 功能:主页面----娱乐碎片 作者:mike 时间：2015-10-22 上午8:53:40 修改: */public class HappyFragement extends BaseFragement{	// 广告相关	private SlideShowView happyAdvert;	private List<String> advertPicUrls;// 图片集合	private int advertNums = 20, advertPage = 3;// 广告的页数和页码	public HappyFragement() {		super(R.layout.frag_happy);		// TODO Auto-generated constructor stub	}	@Override	protected void initView() {		// TODO Auto-generated method stub		happyAdvert = findViewWithId(R.id.happy_advert);	}	@Override	protected void initData() {		// TODO Auto-generated method stub		advertPicUrls = new ArrayList<String>();// 图片集合	}	@Override	protected void bindView() {		// TODO Auto-generated method stub		// 调用广告接口		HttpFactory.searchNewsTJ(this, advertNums, advertPage, 1);	}		@Override	public void httpSuccess(String result, int responseFlag) {		if (responseFlag == 1) {// 广告新闻			List<New> pageContent = new ArrayList<New>();						// 一.解析json数据			try {				// 1.将json字符串封装成JSONObject对象				JSONObject back = new JSONObject(result);				// 2.判断服务器返回数据是不是正确数据				int code = back.getInt("code");				String msg = back.getString("msg");				if (code == CostantValue.SERVER_BACK_OK) {// f服务器返回数据成功					// 声明当前页的集合										// 循环解析新闻的json对象					for (int i = 0; i < advertNums; i++) {						JSONObject news = null;												//防止数据获取失败												try {							news = back.getJSONObject(String									.valueOf(i));						} catch (Exception e) {							// TODO: handle exception							continue;						}																		//逐个解析新闻的属性						String time = news.getString("time");						String title = news.getString("title");						String description= news.getString("description");						String picUrl= news.getString("picUrl");						String url= news.getString("url");												//将本条新闻添加到当前页的新闻集合中												pageContent.add(new New(time, title, description, picUrl, url));					}				} else {					// 提示错误原因					getAttachAct().showMessage(msg);					// 返回					return;				}												//二.更新ui				//1.随机新闻条数				int advertNumber = MathUtils.getRandomBetweenRange(3, 5);												//2.更具新闻条数，创建新闻集合				for(New data:pageContent){					//如果本条新闻包含图片地址，就添加带新闻图片地址的集合中										if(!TextUtils.isEmpty(data.getPicUrl())){						advertPicUrls.add(data.getPicUrl());					}										//广告的条数获取完毕										if(advertPicUrls.size()>=advertNumber){						break;					}									}								//3.为广告视图设置广告的集合				happyAdvert.setImageUris(advertPicUrls);			} catch (JSONException e) {				e.printStackTrace();				getAttachAct().showMessage("服务器异常！");			}		}	}}